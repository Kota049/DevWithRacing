// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @default(autoincrement()) @id
  leverage Float
  budget Budget?
  budgetHistories BudgetHistory[]
  commitHistories CommitHistory[]
  bettings Betting[]
  githubUser GithubUser?
}

model Budget{
  id     Int  @id @default(autoincrement())
  user User @relation(fields: [userId],references: [id])
  userId Int @unique
  amount Int
}

model BudgetHistory{
  id     Int  @id @default(autoincrement())
  user User @relation(fields: [userId],references: [id])
  userId Int
  diff Int
  createdBy String
  createdAt DateTime
}

model CommitHistory{
  id     Int  @id @default(autoincrement())
  user User @relation(fields: [userId],references: [id])
  userId Int 
  commitCount Int
  createdAt DateTime
}

model Betting{
  id     Int  @id @default(autoincrement())
  user User @relation(fields: [userId],references: [id])
  userId Int 
  race Race @relation(fields: [raceId],references: [id])
  raceId Int
  bettingDetails BettingDetail[]
  
}
model BettingDetail{
  id     Int  @id @default(autoincrement())
  betting Betting @relation(fields: [bettingId],references: [id])
  bettingId Int 
  horse1 Int
  horse2 Int?
  horse3 Int?
  result String
  amount Int
  bettingType String
}

model Race{
  id     Int  @id @default(autoincrement())
  raceName String
  startAt DateTime
  horses Horse[]
  bettings Betting[]
  
}

model Horse{
  id     Int  @id @default(autoincrement())
  raceId Int
  race Race @relation(fields: [raceId],references: [id])
  name String
  jockeyName String
  order Int
}

model GithubUser{
  id     Int  @id @default(autoincrement())
  user User @relation(fields: [userId],references: [id])
  userId Int @unique
  token String
  refreshToken String
  githubUserId String
  repositories Repository[]
}

model Repository{
  id     Int  @id @default(autoincrement())
  githubUser GithubUser @relation(fields: [githubUserId],references: [id])
  githubUserId Int 
  name String
}